name: Build and Release Installer

on:
  push:
    tags:
      - "v*" # Trigger workflow on tags, e.g., v1.0.0

permissions:
  contents: write # Ensure GITHUB_TOKEN has write permissions

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      # Step 3: Install NSIS
      - name: Install NSIS
        run: choco install nsis -y
        shell: powershell

      # Step 4: Extract version from the tag
      - name: Extract Version from Tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      # Debug Step: Check the extracted version
      - name: Debug Show Extracted Version
        run: echo "Extracted VERSION ${{ env.VERSION }}"

      # Step 5: Publish the project
      - name: Build Project
        run: dotnet publish -c Release -r win-x64 --self-contained false /p:PublishSingleFile=true
        env:
          VERSION: ${{ env.VERSION }}

      # Step 6: Generate NSIS installer
      - name: Generate Installer
        run: makensis installer_script.nsi
        env:
          VERSION: ${{ env.VERSION }}

      # Debug: List files in the directory
      - name: Debug List Files
        run: dir

      # Step 7: Create a GitHub Release and upload the installer
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: SampleAppInstaller.exe # Ensure this matches the actual file name and path
          name: "Release v${{ env.VERSION }}" # Properly interpolate the version in the name
          tag_name: "v${{ env.VERSION }}" # Properly interpolate the version in the tag name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
