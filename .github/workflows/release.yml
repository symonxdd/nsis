name: Build and Release Installer

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract release notes from CHANGELOG.md
        id: extract_notes
        shell: powershell
        run: |
          $changelogPath = "CHANGELOG.md"
          $version = "${{ github.ref }}" -replace "refs/tags/v", ""

          Write-Output "Looking for release notes for version: $version"

          # Check if CHANGELOG.md exists
          if (-Not (Test-Path $changelogPath)) {
              Write-Error "CHANGELOG.md file not found at $changelogPath"
              exit 1
          }

          # Read the content of CHANGELOG.md using UTF-8 without BOM
          $content = Get-Content $changelogPath -Raw -Encoding utf8

          # Regex pattern to extract notes for the current version
          $pattern = "(?s)(## \[$version\].*?)(?=## \[|\Z)"
          $matches = [regex]::Matches($content, $pattern)

          if ($matches.Count -eq 0) {
              Write-Output "No release notes found for version $version."
              echo "RELEASE_NOTES=" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8
          } else {
              # Extract the release notes
              $releaseNotes = $matches[0].Groups[1].Value.Trim()

              # Remove the first line containing the version and date (e.g. "[2.0.18] - 2024-11-24")
              $lines = $releaseNotes -split "`n"  # Split the string by new lines
              $lines = $lines[1..($lines.Length - 1)]  # Remove the first line
              $releaseNotes = $lines -join "`n"  # Join the remaining lines back

              # Debug output to confirm extraction
              Write-Output "Extracted Release Notes:"
              Write-Output $releaseNotes

              # Ensure UTF-8 encoding without BOM when setting the environment variable
              [System.Text.Encoding]::UTF8.GetBytes("RELEASE_NOTES<<EOF`n$releaseNotes`nEOF") |
                  Set-Content -Path $Env:GITHUB_ENV -NoNewline -Encoding Byte
          }
