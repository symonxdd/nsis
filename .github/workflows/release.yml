name: Extract Release Notes Test

on:
  push:
    tags:
      - "v*" # Trigger workflow on tags, e.g., v1.0.0

jobs:
  extract-release-notes:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Debug: List files to ensure CHANGELOG.md is present
      - name: Debug List Files
        run: |
          dir
          ls -l CHANGELOG.md

      # Step 2: Extract release notes from CHANGELOG.md
      - name: Extract Release Notes
        id: extract_notes
        shell: powershell
        run: |
          $changelogPath = "CHANGELOG.md"
          $version = "${{ github.ref }}" -replace "refs/tags/v", ""

          Write-Output "Looking for release notes for version: $version"

          # Check if CHANGELOG.md exists
          if (-Not (Test-Path $changelogPath)) {
              Write-Error "CHANGELOG.md file not found at $changelogPath"
              exit 1
          }

          # Read the content of CHANGELOG.md
          $content = Get-Content $changelogPath -Raw
          Write-Output "Changelog file content: $content" # Debug output

          # Regex pattern to extract notes for the current version
          $pattern = "(?s)(## \[$version\].*?)(?=## \[|\Z)"
          $matches = [regex]::Matches($content, $pattern)

          if ($matches.Count -eq 0) {
              Write-Output "No release notes found for version $version."
              echo "RELEASE_NOTES=" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8
          } else {
              $releaseNotes = $matches[0].Groups[1].Value.Trim()
              Write-Output "Extracted Release Notes: $releaseNotes" # Debug output
              
              # Use a delimiter to set a multi-line environment variable
              echo "RELEASE_NOTES<<EOF" | Out-File -Append -FilePath $Env:GITHUB_ENV
              echo "$releaseNotes" | Out-File -Append -FilePath $Env:GITHUB_ENV
              echo "EOF" | Out-File -Append -FilePath $Env:GITHUB_ENV
          }

      # Step 3: Show extracted release notes (debug step)
      - name: Show Extracted Release Notes
        run: |
          echo "Release Notes:"
          echo "${{ env.RELEASE_NOTES }}"

      # Debug: Check the contents of the environment variable
      - name: Debug Environment Variables
        run: |
          echo "Release Notes from Env Var: ${{ env.RELEASE_NOTES }}"
